{"version":3,"sources":["assets/popcorn.png","components/Section.js","components/Loader.js","components/Message.js","components/Poster.js","routes/Home/HomePresenter.js","api.js","routes/Home/index.js","routes/Home/HomeContainer.js","routes/TV/TVPresenter.js","routes/TV/index.js","routes/TV/TVContainer.js","components/Header.js","routes/Search/SearchPresenter.js","routes/Search/index.js","routes/Search/SearchContainer.js","routes/Detail/DetailPresenter.js","routes/Detail/index.js","routes/Detail/DetailContainer.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Error","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","map","movie","key","poster_path","vote_average","release_date","Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","tvApi","HomeContainer","state","data","results","this","setState","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","Promise","all","SHeader","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","e","preventDefault","searchByTerm","target","a","async","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","original_title","original_name","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","Router","path","exact","component","Home","TV","render","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","ReactDOM","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,qC,wnBCI3C,IAAMC,EAAYC,UAAOC,IAAV,KAKTC,EAAQF,UAAOG,KAAV,KAILC,EAAOJ,UAAOC,IAAV,KAqBKI,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,kBAACR,EAAD,KACE,kBAACG,EAAD,KAAQI,GACR,kBAACF,EAAD,KAAOG,K,iMCrBb,IAAMR,EAAYC,UAAOC,IAAV,KAmBAO,EAVA,WACb,OACE,kBAAC,EAAD,KACE,0BAAMC,KAAK,MAAMC,aAAW,WAA5B,kB,4NCXN,IAAMX,EAAYC,UAAOC,IAAV,KAMTU,EAAOX,UAAOG,KAAV,KACC,SAACS,GAAD,OAAWA,EAAMC,SAebC,EAZD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMF,EAAY,EAAZA,MACrB,OACE,kBAAC,EAAD,KACE,kBAACF,EAAD,CAAME,MAAOA,GAAQE,K,m8BCZ3B,IAAMhB,EAAYC,UAAOC,IAAV,KAGTe,EAAQhB,UAAOC,IAAV,KACe,SAACW,GAAD,OAAWA,EAAMK,SAOrCC,EAASlB,UAAOG,KAAV,KAONgB,EAAiBnB,UAAOC,IAAV,IAGde,EAGAE,GAMAhB,EAAQF,UAAOG,KAAV,KAILiB,EAAOpB,UAAOG,KAAV,KAwCKkB,EAnCA,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,GAAIC,EAAqD,EAArDA,SAAUjB,EAA2C,EAA3CA,MAAOkB,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,KAA4B,IAAtBC,eAAsB,SACzE,OACE,kBAAC,IAAD,CAAMC,GAAID,EAAO,iBAAaJ,GAAb,gBAA6BA,IAC5C,kBAAC,EAAD,KACE,kBAACH,EAAD,KACE,kBAACH,EAAD,CACEC,MACEM,EAAQ,yCAC8BA,GAClCK,EAAQ,MAGhB,kBAACV,EAAD,KACE,0BAAMT,KAAK,MAAMC,aAAW,UAA5B,UAEQ,IACPc,EAJH,QAOF,kBAAC,EAAD,KAAQlB,EAAMuB,OAAS,GAAf,UAAuBvB,EAAMwB,UAAU,EAAG,IAA1C,OAAqDxB,GAC7D,kBAACc,EAAD,KAAOK,M,yFCvDf,IAAM1B,EAAYC,UAAOC,IAAV,KAyEA8B,EArEO,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC/D,OACE,oCACE,kBAAC,IAAD,KACE,oDAEDD,EACC,kBAAC,EAAD,MAEA,kBAAC,EAAD,KACGH,GAAcA,EAAWH,OAAS,GACjC,kBAAC,EAAD,CAASvB,MAAM,eACZ0B,EAAWK,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CACEC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVhB,MAAOgC,EAAMhC,MACbiB,SAAUe,EAAME,YAChBhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,cAAgBJ,EAAMI,aAAaZ,UAAU,EAAG,GAC5DJ,SAAS,QAKhBO,GAAYA,EAASJ,OAAS,GAC7B,kBAAC,EAAD,CAASvB,MAAM,mBACZ2B,EAASI,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,CACEC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVhB,MAAOgC,EAAMhC,MACbiB,SAAUe,EAAME,YAChBhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,cAAgBJ,EAAMI,aAAaZ,UAAU,EAAG,GAC5DJ,SAAS,QAKhBQ,GAAWA,EAAQL,OAAS,GAC3B,kBAAC,EAAD,CAASvB,MAAM,kBACZ4B,EAAQG,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,CACEC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVhB,MAAOgC,EAAMhC,MACbiB,SAAUe,EAAME,YAChBhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,cAAgBJ,EAAMI,aAAaZ,UAAU,EAAG,GAC5DJ,SAAS,QAKhBU,GAAS,kBAACO,EAAD,CAAS9B,MAAM,UAAUE,KAAMqB,O,gBClE7CQ,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,iCAELC,GAAS,CACbC,QAAS,mCACTC,SAAU,SAGCC,GACC,kBAAMP,EAAIQ,IAAI,oBAAqB,CAAEJ,aADtCG,GAED,kBAAMP,EAAIQ,IAAI,iBAAkB,CAAEJ,aAFjCG,GAGF,kBAAMP,EAAIQ,IAAI,gBAAiB,CAAEJ,aAH/BG,GAIE,SAAC7B,GAAD,OAAQsB,EAAIQ,IAAJ,gBAAiB9B,GAAM,CAAE0B,UAAQK,mBAAoB,YAJ/DF,GAKH,SAACG,GAAD,OAAUV,EAAIQ,IAAI,eAAgB,CAAEJ,OAAO,eAAMA,GAAP,CAAeO,MAAOD,OAG7DE,GACD,kBAAMZ,EAAIQ,IAAI,eAAgB,CAAEJ,aAD/BQ,GAEF,kBAAMZ,EAAIQ,IAAI,aAAc,CAAEJ,aAF5BQ,GAGE,kBAAMZ,EAAIQ,IAAI,kBAAmB,CAAEJ,aAHrCQ,GAIC,SAAClC,GAAD,OAAQsB,EAAIQ,IAAJ,aAAc9B,GAAM,CAAE0B,UAAQK,mBAAoB,YAJ3DG,GAKH,SAACF,GACP,OAAOV,EAAIQ,IAAI,YAAa,CAAEJ,OAAO,eAAMA,GAAP,CAAeO,MAAOD,OCtB/CG,G,2MCGbC,MAAQ,CACN1B,WAAY,KACZC,SAAU,KACVC,QAAS,KACTE,MAAO,KACPD,SAAS,G,wMAOGgB,M,uBADSnB,E,EAAjB2B,KAAQC,Q,mBAIAT,M,uBADSlB,E,EAAjB0B,KAAQC,Q,oBAIAT,M,iBADSjB,E,EAAjByB,KAAQC,QAGVC,KAAKC,SAAS,CAAE9B,aAAYC,WAAUC,Y,kDAEtC2B,KAAKC,SAAS,CAAE1B,MAAO,mC,yBAEvByB,KAAKC,SAAS,CAAE3B,SAAS,I,6GAGnB,IAAD,EACmD0B,KAAKH,MAAvD1B,EADD,EACCA,WAAYC,EADb,EACaA,SAAUC,EADvB,EACuBA,QAASE,EADhC,EACgCA,MAAOD,EADvC,EACuCA,QAC9C,OACE,kBAAC,EAAD,CACEH,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTE,MAAOA,EACPD,QAASA,Q,GApCW4B,a,oGCK5B,IAAMhE,GAAYC,UAAOC,IAAV,MAuEA+D,GAnEK,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,SAAU/B,EAA2C,EAA3CA,QAASgC,EAAkC,EAAlCA,YAAa/B,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC9D,OACE,oCACE,kBAAC,IAAD,KACE,qDAEDD,EACC,kBAAC,EAAD,MAEA,kBAAC,GAAD,KACG8B,GAAYA,EAASpC,OAAS,GAC7B,kBAAC,EAAD,CAASvB,MAAM,mBACZ2D,EAAS5B,KAAI,SAAC8B,GAAD,OACZ,kBAAC,EAAD,CACE5B,IAAK4B,EAAK7C,GACVA,GAAI6C,EAAK7C,GACThB,MAAO6D,EAAKC,KACZ7C,SAAU4C,EAAK3B,YACfhB,OAAQ2C,EAAK1B,aACbhB,KAAM0C,EAAKE,gBAAkBF,EAAKE,eAAevC,UAAU,EAAG,SAKrEI,GAAWA,EAAQL,OAAS,GAC3B,kBAAC,EAAD,CAASvB,MAAM,iBACZ4B,EAAQG,KAAI,SAAC8B,GAAD,OACX,kBAAC,EAAD,CACE5B,IAAK4B,EAAK7C,GACVA,GAAI6C,EAAK7C,GACThB,MAAO6D,EAAKC,KACZ7C,SAAU4C,EAAK3B,YACfhB,OAAQ2C,EAAK1B,aACbhB,KAAM0C,EAAKE,gBAAkBF,EAAKE,eAAevC,UAAU,EAAG,SAKrEoC,GAAeA,EAAYrC,OAAS,GACnC,kBAAC,EAAD,CAASvB,MAAM,gBACZ4D,EAAY7B,KAAI,SAAC8B,GAAD,OACf,kBAAC,EAAD,CACE5B,IAAK4B,EAAK7C,GACVA,GAAI6C,EAAK7C,GACThB,MAAO6D,EAAKC,KACZ7C,SAAU4C,EAAK3B,YACfhB,OAAQ2C,EAAK1B,aACbhB,KAAM0C,EAAKE,gBAAkBF,EAAKE,eAAevC,UAAU,EAAG,SAKrEM,GAAS,kBAACO,EAAD,CAAS9B,MAAM,UAAUE,KAAMqB,OC/DpCkC,G,2MCGbZ,MAAQ,CACNO,SAAU,KACV/B,QAAS,KACTgC,YAAa,KACb9B,MAAO,KACPD,SAAS,G,sMAcGoC,QAAQC,IAAI,CAAChB,KAAkBA,KAAiBA,Q,oCARrCS,E,KAAjBN,KAAQC,QAGS1B,E,KAAjByB,KAAQC,QAGSM,E,KAAjBP,KAAQC,QAIZC,KAAKC,SAAS,CAAEG,WAAU/B,UAASgC,gB,kDAEnCL,KAAKC,SAAS,CAAE1B,MAAO,+B,yBAEvByB,KAAKC,SAAS,CAAE3B,SAAS,I,6GAInB,IAAD,EACoD0B,KAAKH,MAAxDO,EADD,EACCA,SAAU/B,EADX,EACWA,QAASgC,EADpB,EACoBA,YAAa/B,EADjC,EACiCA,QAASC,EAD1C,EAC0CA,MACjD,OACE,kBAAC,GAAD,CACE6B,SAAUA,EACV/B,QAASA,EACTgC,YAAaA,EACb/B,QAASA,EACTC,MAAOA,Q,GAtCW2B,a,iyBCA1B,IAAMU,GAAUzE,UAAO0E,OAAV,MAcPC,GAAO3E,UAAO4E,GAAV,MAIJC,GAAO7E,UAAO8E,GAAV,MAImB,SAAClE,GAAD,OAAYA,EAAMmE,QAAU,UAAY,iBAI/DC,GAAQhF,kBAAOiF,IAAPjF,CAAH,MAyBIkF,gBAlBA,SAAC,GAAgC,IAAlBC,EAAiB,EAA7BC,SAAYD,SAC5B,OACE,kBAACV,GAAD,KACE,kBAACE,GAAD,KACE,kBAACE,GAAD,CAAME,QAAsB,MAAbI,GACb,kBAACH,GAAD,CAAOrD,GAAG,KAAV,WAEF,kBAACkD,GAAD,CAAME,QAAsB,QAAbI,GACb,kBAACH,GAAD,CAAOrD,GAAG,OAAV,OAEF,kBAACkD,GAAD,CAAME,QAAsB,YAAbI,GACb,kBAACH,GAAD,CAAOrD,GAAG,WAAV,gB,4UCvCV,IAAM5B,GAAYC,UAAOC,IAAV,MAGToF,GAAOrF,UAAOsF,KAAV,MAIJC,GAAQvF,UAAOwF,MAAV,MAiFIC,GA3ES,SAAC,GAQlB,IAPLC,EAOI,EAPJA,aACAC,EAMI,EANJA,UACAxD,EAKI,EALJA,QACAC,EAII,EAJJA,MACAwD,EAGI,EAHJA,WACAC,EAEI,EAFJA,aACAC,EACI,EADJA,WAEA,OACE,oCACE,kBAAC,IAAD,KACE,oDAEF,kBAAC,GAAD,KACE,kBAACT,GAAD,CAAMU,SAAUF,GACd,kBAACN,GAAD,CACES,YAAY,+BACZC,MAAOL,EACPM,SAAUJ,KAGb3D,EACC,kBAAC,EAAD,MAEA,oCACGuD,GAAgBA,EAAa7D,OAAS,GACrC,kBAAC,EAAD,CAASvB,MAAM,iBACZoF,EAAarD,KAAI,SAACC,GAAD,OAChB,kBAAC,EAAD,CACEC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVhB,MAAOgC,EAAMhC,MACbiB,SAAUe,EAAME,YAChBhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,cAAgBJ,EAAMI,aAAaZ,UAAU,EAAG,GAC5DJ,SAAS,QAKhBiE,GAAaA,EAAU9D,OAAS,GAC/B,kBAAC,EAAD,CAASvB,MAAM,mBACZqF,EAAUtD,KAAI,SAAC8B,GAAD,OACb,kBAAC,EAAD,CACE5B,IAAK4B,EAAK7C,GACVA,GAAI6C,EAAK7C,GACThB,MAAO6D,EAAKC,KACZ7C,SAAU4C,EAAK3B,YACfhB,OAAQ2C,EAAK1B,aACbhB,KAAM0C,EAAKE,gBAAkBF,EAAKE,eAAevC,UAAU,EAAG,SAKrEM,GAAS,kBAACO,EAAD,CAAS9B,MAAM,UAAUE,KAAMqB,IACxCsD,GAAgBC,GAAqC,IAAxBD,EAAa7D,QAAqC,IAArB8D,EAAU9D,QACnE,kBAACc,EAAD,CAAS9B,MAAM,UAAUE,KAAK,sBC7E7BoF,G,2MCEbzC,MAAQ,CACNgC,aAAc,KACdC,UAAW,KACXC,WAAY,GACZxD,MAAO,KACPD,SAAS,G,EAGX0D,aAAe,SAACO,GACdA,EAAEC,iBAEiB,KADI,EAAK3C,MAApBkC,YAEN,EAAKU,gB,EAITR,WAAa,SAACM,GACZ,EAAKtC,SAAS,CAAE8B,WAAYQ,EAAEG,OAAON,S,EAGvCK,aAAe,kCAAAE,EAAAC,OAAA,uDACLb,EAAe,EAAKlC,MAApBkC,WACR,EAAK9B,SAAS,CAAE3B,SAAS,IAFZ,oBAAAqE,EAAA,MAODrD,GAAiByC,IAPhB,uBAMQF,EANR,EAMT/B,KAAQC,QANC,WAAA4C,EAAA,MAUDhD,GAAaoC,IAVZ,gBASQD,EATR,EASThC,KAAQC,QAGV,EAAKE,SAAS,CACZ4B,eACAC,cAdS,kDAiBX,EAAK7B,SAAS,CAAE1B,MAAO,wBAjBZ,yBAmBX,EAAK0B,SAAS,CAAE3B,SAAS,IAnBd,6E,wEAuBL,IAAD,EACyD0B,KAAKH,MAA7DgC,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAAYxD,EADtC,EACsCA,MAAOD,EAD7C,EAC6CA,QACpD,OACE,kBAAC,GAAD,CACEuD,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZzD,QAASA,EACTC,MAAOA,EACPyD,aAAchC,KAAKgC,aACnBC,WAAYjC,KAAKiC,iB,GAtDK/B,a,+6CCG9B,IAAMhE,GAAYC,UAAOC,IAAV,MAOTyG,GAAW1G,UAAOC,IAAV,MAMY,SAACW,GAAD,OAAWA,EAAM+F,WAQrCC,GAAU5G,UAAOC,IAAV,MAQP4G,GAAQ7G,UAAOC,IAAV,MAEe,SAACW,GAAD,OAAWA,EAAM+F,WAOrCG,GAAO9G,UAAOC,IAAV,MAKJC,GAAQF,UAAO+G,GAAV,MAILC,GAAgBhH,UAAOC,IAAV,MAIb4E,GAAO7E,UAAOG,KAAV,MAEJ8G,GAAUjH,UAAOG,KAAV,MAIP+G,GAAWlH,UAAOmH,EAAV,MAyDCC,GAlDS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQlF,EAAqB,EAArBA,QAAqB,EAAZC,MAC1C,OAAOD,EACL,oCACE,kBAAC,IAAD,KACE,qDAEF,kBAAC,EAAD,OAGF,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,+BAAQkF,EAAOC,eAAiBD,EAAOC,eAAiBD,EAAOE,gBAEjE,kBAACb,GAAD,CAAUC,QAAO,6CAAwCU,EAAOG,iBAChE,kBAACZ,GAAD,KACE,kBAACC,GAAD,CACEF,QACEU,EAAO7E,YAAP,6CAC0C6E,EAAO7E,aAC7CZ,EAAQ,MAGhB,kBAACkF,GAAD,KACE,kBAAC,GAAD,KAAQO,EAAOC,eAAiBD,EAAOC,eAAiBD,EAAOE,eAC/D,kBAACP,GAAD,KACE,kBAAC,GAAD,MACIK,EAAO3E,aAAe2E,EAAO3E,aAAe2E,EAAOhD,gBAAgBvC,UAAU,EAAG,IAEpF,kBAACmF,GAAD,aACA,kBAAC,GAAD,KAAOI,EAAOI,QAAUJ,EAAOI,QAAUJ,EAAOK,iBAAiB,GAAjE,QACA,kBAACT,GAAD,aACA,kBAAC,GAAD,KACGI,EAAOM,QACNN,EAAOM,OAAOtF,KAAI,SAACuF,EAAOC,GAAR,OAChBA,IAAUR,EAAOM,OAAO9F,OAAS,EAAI+F,EAAMxD,KAA3C,UAAqDwD,EAAMxD,KAA3D,YAIR,kBAAC8C,GAAD,KAAWG,EAAOS,cC1GbC,G,YCEb,WAAYnH,GAAQ,IAAD,sBACjB,4CAAMA,IADW,IAGHuE,EACVvE,EADFwE,SAAYD,SAHG,OAKjB,EAAKzB,MAAQ,CACX2D,OAAQ,KACRjF,MAAO,KACPD,SAAS,EACTT,QAASyD,EAAS6C,SAAS,YATZ,E,4KAmBbnE,KAAKjD,MAHKU,E,EADZ2G,MACEjF,OAAU1B,GAED4G,E,EAAXC,QAAWD,KAELxG,EAAYmC,KAAKH,MAAjBhC,QACF0G,EAAUC,SAAS/G,IAErBgH,MAAMF,G,yCACDF,EAAK,M,UAGVb,EAAS,K,UAEP3F,E,4CACwByB,GAAsBiF,I,iBAAvCf,E,EAAN1D,K,mDAEuBH,GAAiB4E,I,iBAAlCf,E,EAAN1D,K,0DAGLE,KAAKC,SAAS,CAAE1B,MAAO,yB,yBAEvByB,KAAKC,SAAS,CAAE3B,SAAS,EAAOkF,W,6GAG1B,IAAD,EAC4BxD,KAAKH,MAAhC2D,EADD,EACCA,OAAQjF,EADT,EACSA,MAAOD,EADhB,EACgBA,QAEvB,OAAO,kBAAC,GAAD,CAAiBkF,OAAQA,EAAQjF,MAAOA,EAAOD,QAASA,Q,GA5CrC4B,aCwBfwE,GAnBA,WACb,OACE,kBAAC,IAAD,KACE,oCACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,kBAAC,IAAD,CAAOH,KAAK,MAAMC,OAAK,EAACC,UAAWE,KACnC,kBAAC,IAAD,CAAOJ,KAAK,cAAcK,OAAQ,kBAAM,0CACxC,kBAAC,IAAD,CAAOL,KAAK,UAAUE,UAAWI,KACjC,kBAAC,IAAD,CAAON,KAAK,aAAaE,UAAWK,KACpC,kBAAC,IAAD,CAAOP,KAAK,YAAYE,UAAWK,KACnC,kBAAC,IAAD,CAAUC,KAAK,IAAIrH,GAAG,U,sVCjBhC,IAkBesH,GAlBMC,4BAAH,KACdC,MCSWC,OATf,WACE,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,QCJNC,IAASR,OAAO,kBAAC,GAAD,MAASS,SAASC,eAAe,W","file":"static/js/main.86840a4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/popcorn.a1d8236d.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => {\n  return (\n    <Container>\n      <span role=\"img\" aria-label=\"Loading\">\n        ⏱️\n      </span>\n    </Container>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Error = ({ text, color }) => {\n  return (\n    <Container>\n      <Text color={color}>{text}</Text>\n    </Container>\n  );\n};\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  position: absolute;\n  transition: opacity 0.1s linear;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n  position: relative;\n`;\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => {\n  return (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n      <Container>\n        <ImageContainer>\n          <Image\n            bgUrl={\n              imageUrl\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                : require('../assets/popcorn.png')\n            }\n          />\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐\n            </span>{' '}\n            {rating}/10\n          </Rating>\n        </ImageContainer>\n        <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n        <Year>{year}</Year>\n      </Container>\n    </Link>\n  );\n};\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  yaer: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'components/Section';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport Poster from '../../components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => {\n  return (\n    <>\n      <Helmet>\n        <title>Movies | Nomflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n              {nowPlaying.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  year={movie.release_date && movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming Movies\">\n              {upcoming.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  year={movie.release_date && movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Movies\">\n              {popular.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  year={movie.release_date && movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\nconst params = {\n  api_key: 'a34f5eb62d345ac1d9eabe58f41c7b32',\n  language: 'ko-KR',\n};\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing', { params }),\n  upcoming: () => api.get('movie/upcoming', { params }),\n  popular: () => api.get('movie/popular', { params }),\n  movieDetail: (id) => api.get(`movie/${id}`, { params, append_to_response: 'videos' }),\n  search: (term) => api.get('search/movie', { params: { ...params, query: term } }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated', { params }),\n  popular: () => api.get('tv/popular', { params }),\n  airingToday: () => api.get('tv/airing_today', { params }),\n  showDetail: (id) => api.get(`tv/${id}`, { params, append_to_response: 'videos' }),\n  search: (term) => {\n    return api.get('search/tv', { params: { ...params, query: term } });\n  },\n};\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React, { Component } from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api';\n\nclass HomeContainer extends Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch (err) {\n      this.setState({ error: \"Can't find Movies information.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'components/Section';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport Poster from '../../components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => {\n  return (\n    <>\n      <Helmet>\n        <title>TV Shows| Nomflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated Shows\">\n              {topRated.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  title={show.name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popluar Shows\">\n              {popular.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  title={show.name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {airingToday && airingToday.length > 0 && (\n            <Section title=\"Airing Today\">\n              {airingToday.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  title={show.name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import React, { Component } from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nclass TVContainer extends Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n  async componentDidMount() {\n    try {\n      const [\n        {\n          data: { results: topRated },\n        },\n        {\n          data: { results: popular },\n        },\n        {\n          data: { results: airingToday },\n        },\n      ] = await Promise.all([tvApi.topRated(), tvApi.popular(), tvApi.airingToday()]);\n\n      this.setState({ topRated, popular, airingToday });\n    } catch (error) {\n      this.setState({ error: \"Can't find TV information.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default TVContainer;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst SHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${(props) => (props.current ? '#3498DB' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = ({ location: { pathname } }) => {\n  return (\n    <SHeader>\n      <List>\n        <Item current={pathname === '/'}>\n          <SLink to=\"/\">Movies</SLink>\n        </Item>\n        <Item current={pathname === '/tv'}>\n          <SLink to=\"/tv\">TV</SLink>\n        </Item>\n        <Item current={pathname === '/search'}>\n          <SLink to=\"/search\">Search</SLink>\n        </Item>\n      </List>\n    </SHeader>\n  );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from '../../components/Loader';\nimport Section from '../../components/Section';\nimport Message from '../../components/Message';\nimport Poster from '../../components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  error,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n}) => {\n  return (\n    <>\n      <Helmet>\n        <title>Search | Nomflix</title>\n      </Helmet>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"Search Movies or TV Shows...\"\n            value={searchTerm}\n            onChange={updateTerm}\n          />\n        </Form>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Results\">\n                {movieResults.map((movie) => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    title={movie.title}\n                    imageUrl={movie.poster_path}\n                    rating={movie.vote_average}\n                    year={movie.release_date && movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"TV Show Results\">\n                {tvResults.map((show) => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    title={show.name}\n                    imageUrl={show.poster_path}\n                    rating={show.vote_average}\n                    year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                  />\n                ))}\n              </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n            {movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && (\n              <Message color=\"#95a5a6\" text=\"Nothing found\" />\n            )}\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React, { Component } from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from 'api';\nclass SearchContainer extends Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (e) => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch (error) {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n\nexport default SearchContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'components/Loader';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) => {\n  return loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.original_title ? result.original_title : result.original_name}</title>\n      </Helmet>\n      <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../assets/popcorn.png')\n          }\n        />\n        <Data>\n          <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n          <ItemContainer>\n            <Item>\n              {(result.release_date ? result.release_date : result.first_air_date).substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1 ? genre.name : `${genre.name} / `,\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n};\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React, { Component } from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from 'api';\nclass DetailContainer extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/'),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parseId = parseInt(id);\n\n    if (isNaN(parseId)) {\n      return push('/');\n    }\n\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parseId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parseId));\n      }\n    } catch (error) {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n  render() {\n    const { result, error, loading } = this.state;\n\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n\nexport default DetailContainer;\n","import React from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Home from 'routes/Home';\nimport TV from 'routes/TV';\nimport Header from 'components/Header';\nimport Search from 'routes/Search';\nimport Detail from 'routes/Detail';\n\nconst Router = () => {\n  return (\n    <HashRouter>\n      <>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/tv\" exact component={TV} />\n          <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/movie/:id\" component={Detail} />\n          <Route path=\"/show/:id\" component={Detail} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset};\n  a{\n    text-decoration:none;\n    color:inherit;\n  }\n  *{\n    box-sizing:border-box;\n  }\n  body{\n    font-family:\"Hack\";\n    font-size:12px;\n    background-color:rgba(20, 20, 20, 1);\n    color:white;\n    padding-top:50px;\n  }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport Router from 'components/Router';\nimport GlobalStyles from 'components/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}